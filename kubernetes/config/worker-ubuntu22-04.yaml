apiVersion: v1
data:
  worker-ubuntu22-04.jsonnet: |
    local common = import 'common.libsonnet';

    local fuseDirectory = '/fuse';
    local kiB = 1024;
    local MiB = 1024 * kiB;
    local GiB = 1024 * MiB;

    {
      blobstore: {
        actionCache: common.blobstore.actionCache,
        contentAddressableStorage: {
          readCaching: {
            slow: common.blobstore.contentAddressableStorage,
            fast: {
              'local': {
                keyLocationMapOnBlockDevice: {
                  // A 64 MiB index is large enough to accommodate approximately one
                  // million objects.
                  file: {
                    path: '/storage-cas/key_location_map',
                    sizeBytes: 512 * MiB,
                  },
                },
                keyLocationMapMaximumGetAttempts: 8,
                keyLocationMapMaximumPutAttempts: 32,

                // https://meroton.com/blog/buildbarn-block-sizes/
                local maxBlobBytes = self.blocksOnBlockDevice.source.file.sizeBytes / (self.oldBlocks + self.currentBlocks + self.newBlocks + self.blocksOnBlockDevice.spareBlocks),

                // ERROR: /private/var/tmp/_bazel_gus/798cdab9ca916cc0b6f69f7c876590eb/external/base_debug_runtime_jvm/image/BUILD:4:17: SHA256 external/base_debug_runtime_jvm/image/008.tar.gz.nogz.sha256 failed: (Exit 34): Remote Execution Failure:
                // Invalid Argument: I/O error while running command: Failed to read from 1-4462bfd385e9c5a89b1fba3b71bf459ec52ddbdcc02503884a82521fbdf3e5af-1287761920- at offset 0: Failed to replicate blob 1-4462bfd385e9c5a89b1fba3b71bf459ec52ddbdcc02503884a82521fbdf3e5af-1287761920-: 1-4462bfd385e9c5a89b1fba3b71bf459ec52ddbdcc02503884a82521fbdf3e5af-1287761920-: Blob is 1287761920 bytes in size, while this backend is only capable of storing blobs of up to 780902400 bytes in size
                local bigBlobBytes = 1287761920,
                assert bigBlobBytes <= maxBlobBytes,

                oldBlocks: 1,
                currentBlocks: 5,
                newBlocks: 1,
                blocksOnBlockDevice: {
                  source: {
                    file: {
                      path: '/storage-cas/blocks',
                      sizeBytes: 16 * GiB,
                    },
                  },
                  spareBlocks: 1,
                  dataIntegrityValidationCache: {
                    cacheSize: 100000,
                    cacheDuration: '14400s',
                    cacheReplacementPolicy: 'LEAST_RECENTLY_USED',
                  },
                },
                persistent: {
                  stateDirectoryPath: '/storage-cas/persistent_state',
                  minimumEpochInterval: '300s',
                },
              },
            },
            replicator: { deduplicating: { 'local': {} } },
          },
        },
      },
      browserUrl: common.browserUrl,
      maximumMessageSizeBytes: common.maximumMessageSizeBytes,
      scheduler: { address: 'scheduler:8983' },
      global: common.global + {
        setUmask: { umask: 0 },
      },
      buildDirectories: [{
        virtual: {
          maximumExecutionTimeoutCompensation: '3600s',
          shuffleDirectoryListings: true,
          mount: {
            mountPath: fuseDirectory,
            fuse: {
              directoryEntryValidity: '300s',
              inodeAttributeValidity: '300s',
              allowOther: true,
              directMount: true,
            },
          },
        },
        runners: [{
          endpoint: { address: 'unix:///worker/runner' },
          concurrency: 8,

          // ERROR: /private/var/tmp/_bazel_gus/798cdab9ca916cc0b6f69f7c876590eb/external/base_debug_runtime_jvm/image/BUILD:4:17: GUNZIP external/base_debug_runtime_jvm/image/008.tar.gz.nogz failed: (Exit 34): Remote Execution Failure:
          // Invalid Argument: I/O error while running command: Failed to write to file at offset 1073741824: File size quota reached
          assert 1073741824 < self.maximumFilePoolSizeBytes,

          maximumFilePoolFileCount: 10000,
          maximumFilePoolSizeBytes: 3 * GiB,
          platform: {
            properties: [
              { name: 'ISA', value: 'x86-64' },
              { name: 'OSFamily', value: 'Linux' },
              { name: 'container-image', value: 'docker://ghcr.io/catthehacker/ubuntu:act-22.04@sha256:5f9c35c25db1d51a8ddaae5c0ba8d3c163c5e9a4a6cc97acd409ac7eae239448' },
            ],
          },
          workerId: {
            'pod': std.extVar("POD_NAME"),
            'node': std.extVar("NODE_NAME"),
            'pod-uid': std.extVar("POD_UID"),
          },
        }],
      }],
      outputUploadConcurrency: 11,
      filePool: {
        blockDevice: {
          file: {
            path: '/storage-filepool/filepool',
            // Max size of temporary (and output) files
            // concurrency * maximumFilePoolSizeBytes
            sizeBytes: 8 * GiB,
          },
        },
      },
      directoryCache: {
        maximumCount: 10000,
        maximumSizeBytes: 1024 * self.maximumCount,
        cacheReplacementPolicy: 'LEAST_RECENTLY_USED',
      },
      //prefetching: {
      //  fileSystemAccessCache: common.blobstore.actionCache,
      //  bloomFilterBitsPerPath: 14,
      //  bloomFilterMaximumSizeBytes: 65536,
      //},
    }
kind: ConfigMap
metadata:
  name: worker-ubuntu22-04
  namespace: buildbarn
